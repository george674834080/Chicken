<Application 
    x:Class="Chicken.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"       
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:it="clr-namespace:ImageTools.Controls;assembly=ImageTools.Controls"
    xmlns:ctrls ="clr-namespace:Chicken.Controls"
    xmlns:vm="clr-namespace:Chicken.ViewModel">

    <Application.Resources>

        <vm:LanguageHelper x:Key="LanguageHelper" />

        <ctrls:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <ctrls:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <ctrls:BooleanToFillConverter x:Key="BooleanToFillConverter" />

        <!--themes-->
        <Style TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ScrollStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.5"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Scrolling">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="NotScrolling">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="VerticalCompression">
                                    <VisualState x:Name="NoVerticalCompression"/>
                                    <VisualState x:Name="CompressionTop"/>
                                    <VisualState x:Name="CompressionBottom"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HorizontalCompression">
                                    <VisualState x:Name="NoHorizontalCompression"/>
                                    <VisualState x:Name="CompressionLeft"/>
                                    <VisualState x:Name="CompressionRight"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollContentPresenter x:Name="ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                <ScrollBar x:Name="VerticalScrollBar" IsHitTestVisible="False" Height="Auto" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" />
                                <ScrollBar x:Name="HorizontalScrollBar" IsHitTestVisible="False" Width="Auto" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ctrls:LazyListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ctrls:LazyListBoxItem">
                        <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentControl x:Name="ContentContainer"
                                            VerticalAlignment="Stretch" 
                                            HorizontalAlignment="Stretch"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}" 
                                            Content="{TemplateBinding Content}" 
                                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                                            Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ctrls:ToastPrompt">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeSmall}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource PhoneAccentBrush}" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Overlay" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ctrls:ToastPrompt">
                        <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="Transparent">
                            <Rectangle Fill="{TemplateBinding Background}" Opacity="0.6" />
                            <StackPanel VerticalAlignment="Bottom" Margin="0" Orientation="{TemplateBinding TextOrientation}">
                                <StackPanel Margin="0" VerticalAlignment="Bottom" Orientation="Horizontal">
                                    <Image Margin="0" Visibility="Collapsed" Name="ToastImage" VerticalAlignment="Bottom" Width="{TemplateBinding ImageWidth}" Height="{TemplateBinding ImageHeight}" Source="{TemplateBinding ImageSource}" Stretch="{TemplateBinding Stretch}" />
                                    <TextBlock Text="{TemplateBinding Title}" FontWeight="Bold" VerticalAlignment="Center" Margin="0" Padding="0" />
                                </StackPanel>
                                <TextBlock Text="{TemplateBinding Message}" Margin="0" Padding="0" TextWrapping="{TemplateBinding TextWrapping}" VerticalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ctrls:ListPicker">
            <Setter Property="Background" Value="{StaticResource PhoneTextBoxBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneTextBoxForegroundBrush}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Margin" Value="{StaticResource PhoneTouchTargetOverhang}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ctrls:ListPicker">
                        <StackPanel>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="PickerStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background"
                                            Duration="0">
                                                <DiscreteObjectKeyFrame
                                                Value="{StaticResource PhoneTextBoxEditBackgroundColor}"
                                                KeyTime="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderBrush"
                                            Duration="0">
                                                <DiscreteObjectKeyFrame
                                                Value="{StaticResource PhoneTextBoxEditBorderBrush}"
                                                KeyTime="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentControl
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Foreground="{StaticResource PhoneForegroundBrush}"
                                FontSize="{StaticResource PhoneFontSizeNormal}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="0 0 0 8"/>
                            <Grid>
                                <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding Background}"
                                BorderThickness="2">
                                    <Canvas x:Name="ItemsPresenterHost" MinHeight="46">
                                        <ItemsPresenter x:Name="ItemsPresenter">
                                            <ItemsPresenter.RenderTransform>
                                                <TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
                                            </ItemsPresenter.RenderTransform>
                                        </ItemsPresenter>
                                    </Canvas>
                                </Border>
                                <Popup x:Name="FullModePopup">
                                    <Border Background="{StaticResource PhoneChromeBrush}">
                                        <!-- Popup.Child should always be a Border -->
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <ContentControl
                                            Grid.Row="0"
                                            Content="{TemplateBinding FullModeHeader}"
                                            Foreground="{StaticResource PhoneForegroundBrush}"
                                            FontFamily="{StaticResource PhoneFontFamilySemiBold}"
                                            FontSize="{StaticResource PhoneFontSizeMedium}"
                                            HorizontalAlignment="Left"
                                            Margin="24 12 0 0"/>
                                            <ListBox
                                            x:Name="FullModeSelector"
                                            Grid.Row="1"
                                            ItemTemplate="{TemplateBinding ActualFullModeItemTemplate}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Margin="{StaticResource PhoneMargin}">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel/>
                                                        <!-- Ensures all containers will be available during the Loaded event -->
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ctrls:ListPickerItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="8 6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ctrls:ListPickerItem">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentContainer"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                                <DiscreteObjectKeyFrame
                                                Value="{StaticResource PhoneAccentBrush}"
                                                KeyTime="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentControl
                            x:Name="ContentContainer"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Foreground="{TemplateBinding Foreground}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--styles-->
        <Style x:Name="TextSmall" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeSmall}" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
            <Setter Property="Foreground" Value="Silver" />
        </Style>
        <Style x:Name="TextNormal" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeNormal}" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
        </Style>
        <Style x:Name="TextMedium" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
        </Style>

        <Style x:Name="TweetScreenName" TargetType="TextBlock" BasedOn="{StaticResource TextSmall}">
            <Setter Property="FontFamily" Value="Segoe WP Semibold" />
            <Setter Property="Opacity" Value="0.6" />
        </Style>

        <Style x:Name="ProfileScreenName" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe WP Semibold" />
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeSmall}" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
        </Style>

        <Style x:Name="RetweetCountBorder" TargetType="Border">
            <Setter Property="Opacity" Value="0.6" />
            <Setter Property="BorderBrush" Value="Silver" />
            <Setter Property="Margin" Value="0,4,0,0" />
        </Style>

        <!--Content default is Medium-->
        <Style x:Name="TextContent" TargetType="ctrls:AutoRichTextBox">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <!--textbox content-->
        <Style x:Name="TextBoxContent" TargetType="TextBox">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <!--Content Normal-->
        <Style x:Name="TextContentNormal" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeNormal}" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <!--Content Normal Center-->
        <Style x:Name="TextContentCenter" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
        </Style>

        <!--HyperLink Text without underline-->
        <Style x:Name="HyperLinkTextNoUnderlineCenter" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
            <Setter Property="Foreground" Value="#F9F9F9" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
        </Style>
        <!--HyperLink Text default-->
        <Style x:Name="HyperLinkText" TargetType="TextBlock" BasedOn="{StaticResource HyperLinkTextNoUnderlineCenter}">
            <Setter Property="TextDecorations" Value="Underline" />
        </Style>
        <!--HyperLink Text small-->
        <Style x:Name="HyperLinkTextSmall" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeSmall}" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="TextAlignment" Value="Right" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
        </Style>
        <!--HyperLink Button default style-->
        <Style TargetType="HyperlinkButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HyperlinkButton">
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" Style="{StaticResource HyperLinkText}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="HyperLinkNoUnderlineCenter" TargetType="HyperlinkButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HyperlinkButton">
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" Style="{StaticResource HyperLinkTextNoUnderlineCenter}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="HyperLinkSmall" TargetType="HyperlinkButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HyperlinkButton">
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" Style="{StaticResource HyperLinkTextSmall}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--media and retweet icon-->
        <Style x:Name="RetweetRectangleSmall" TargetType="Rectangle">
            <Setter Property="Stretch" Value="Fill" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Margin" Value="2" />
        </Style>
        <!--emotion button-->
        <Style x:Name="EmotionButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="4" Opacity="0.4" Background="Transparent">
                            <Rectangle Fill="Gray" Opacity="0.6" />
                            <ContentPresenter Margin="4" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--profile image-->
        <Style x:Name="ProfileImage" TargetType="ctrls:ImageContainer">
            <Setter Property="Margin" Value="4" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <!--profile image icon-->
        <Style x:Name="ProfileImageIcon" TargetType="ctrls:ImageContainer">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
        </Style>
        <!--profile image small-->
        <Style x:Name="ProfileImageSmall" TargetType="ctrls:ImageContainer" BasedOn="{StaticResource ProfileImage}">
            <Setter Property="Margin" Value="0,2,4,0" />
            <Setter Property="Width" Value="64" />
            <Setter Property="Height"  Value="64" />
        </Style>
        <!--profile image bigger-->
        <Style x:Name="ProfileImageBigger" TargetType="ctrls:ImageContainer" BasedOn="{StaticResource ProfileImage}">
            <Setter Property="Width" Value="84" />
            <Setter Property="Height"  Value="84" />
        </Style>
        <!--styles-->

        <DataTemplate x:Key="TweetTemplate">
            <Grid Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="68" />
                    <ColumnDefinition Width="*"  />
                </Grid.ColumnDefinitions>
                <!--avatar-->
                <Button Grid.Column="0"
                        Command="{Binding DataContext.ClickCommand, ElementName=AutoListBox}"
                        CommandParameter="{Binding Path=User.User}">
                    <Button.Template>
                        <ControlTemplate>
                            <ctrls:ImageContainer ImageSource="{Binding User.ProfileImageSource}"
                                                  Style="{StaticResource ProfileImageSmall}" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <!--content-->
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="HyperlinkButton" BasedOn="{StaticResource HyperLinkTextSmall}" />
                    </Grid.Resources>
                    <Button Grid.Row="0"
                            Command="{Binding DataContext.ItemClickCommand, ElementName=AutoListBox}"
                            CommandParameter="{Binding Path=Id}">
                        <Button.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextSmall}" />
                                    </Grid.Resources>
                                    <!--user name-->
                                    <TextBlock Text="{Binding User.Name}" Grid.Row="0" />
                                    <!--screen name-->
                                    <TextBlock Text="{Binding User.ScreenName}" Grid.Row="1"
                                               Style="{StaticResource TweetScreenName}" />
                                    <!--text-->
                                    <ctrls:AutoRichTextBox Grid.Row="2"
                                                           TweetData="{Binding Path=Tweet}"
                                                           HorizontalAlignment="Stretch" TextAlignment="Left" />
                                    <Grid Grid.Row="3" Opacity="0.6" HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextSmall}">
                                                <Setter Property="HorizontalAlignment" Value="Left" />
                                                <Setter Property="TextAlignment" Value="Left" />
                                            </Style>
                                        </Grid.Resources>
                                        <!--date-->
                                        <TextBlock Grid.Row="0" Text="{Binding CreatedDate}" />
                                        <!--media retweet count etc-->
                                        <StackPanel Grid.Row="0"
                                                    HorizontalAlignment="Right" Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style TargetType="Rectangle" BasedOn="{StaticResource RetweetRectangleSmall}">
                                                    <Setter Property="Fill" Value="{StaticResource PhoneForegroundBrush}" />
                                                </Style>
                                            </StackPanel.Resources>
                                            <!--conversation-->
                                            <Rectangle Visibility="{Binding InReplyToTweetId,Converter={StaticResource StringToVisibilityConverter}}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/Images/dark/conversation.png" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <!--media-->
                                            <Rectangle Visibility="{Binding IncludeMedia,Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/Images/dark/media.png" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <!--location-->
                                            <Rectangle Visibility="{Binding IncludeCoordinates,Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/Images/dark/location.png" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <!--retweet-->
                                            <Rectangle Visibility="{Binding RetweetCount,Converter={StaticResource StringToVisibilityConverter}}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/Images/dark/retweet.png" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <!--via-->
                    <HyperlinkButton Content="{Binding Path=Source}" Grid.Row="1"
                                     NavigateUri="{Binding Path=SourceUrl}" TargetName="_blank"
                                     Style="{StaticResource HyperLinkSmall}" HorizontalAlignment="Right" />
                </Grid>
                <!--content end-->
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DirectMessageTemplate">
            <Grid Margin="0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"  />
                </Grid.ColumnDefinitions>
                <!--avatar-->
                <Button Grid.Column="0"
                        Command="{Binding DataContext.ClickCommand, ElementName=AutoListBox}"
                        CommandParameter="{Binding User.User}">
                    <Button.Template>
                        <ControlTemplate>
                            <ctrls:ImageContainer ImageSource="{Binding User.ProfileImageSource}"
                                                  Style="{StaticResource ProfileImageSmall}" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <!--content-->
                <Button Grid.Column="1"
                        Command="{Binding DataContext.ItemClickCommand, ElementName=AutoListBox}"
                        CommandParameter="{Binding User.User}">
                    <Button.Template>
                        <ControlTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextSmall}" />
                                </Grid.Resources>
                                <!--user name-->
                                <TextBlock Grid.Row="0" Text="{Binding User.Name}" />
                                <!--text-->
                                <TextBlock Grid.Row="1" Text="{Binding Text}"
                                           Style="{StaticResource TextContentNormal}"
                                           HorizontalAlignment="Stretch" TextAlignment="Left" />
                                <!--date-->
                                <TextBlock Grid.Row="2" Opacity="0.6"
                                           Text="{Binding CreatedDate}" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <!--content end-->
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FriendTemplate">
            <Button Margin="0,4"
                    Command="{Binding DataContext.ClickCommand, ElementName=AutoListBox}"
                    CommandParameter="{Binding User}">
                <Button.Template>
                    <ControlTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*"  />
                            </Grid.ColumnDefinitions>
                            <ctrls:ImageContainer ImageSource="{Binding ProfileImageSource}"
                                                  Grid.Column="0" Style="{StaticResource ProfileImageBigger}" />
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextSmall}">
                                        <Setter Property="TextAlignment" Value="Left" />
                                    </Style>
                                </Grid.Resources>
                                <!--user name-->
                                <TextBlock Grid.Row="0" Text="{Binding Name}" />
                                <!--screen name-->
                                <TextBlock Grid.Row="1" Text="{Binding ScreenName}" />
                                <!--description-->
                                <TextBlock Grid.Row="2" Text="{Binding TruncatedDescription}" Style="{StaticResource TextContentNormal}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </DataTemplate>

        <DataTemplate x:Key="ListPickerItemTemplate">
            <TextBlock Text="{Binding DisplayName}" />
        </DataTemplate>

        <!--Pivot Item-->
        <!--Home Pivot Item Style-->
        <Style TargetType="ctrls:HomePivotItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ctrls:HomePivotItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="10" />
                            </Grid.RowDefinitions>
                            <ctrls:LazyListBox x:Name="AutoListBox" Grid.Row="0"
                                               ScrollTo="{Binding Path=ScrollTo}"
                                               ItemsSource="{TemplateBinding ListBoxItems}"
                                               ItemTemplate="{TemplateBinding ListBoxItemTemplate}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="VerticalCompressionTopHandler">
                                        <i:InvokeCommandAction Command="{Binding Path=RefreshCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="VerticalCompressionBottomHandler">
                                        <i:InvokeCommandAction Command="{Binding Path=LoadCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ctrls:LazyListBox>
                            <ProgressBar Grid.Row="1" IsIndeterminate="True"
                                         Visibility="{Binding IsLoading,Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>

    <Application.ApplicationLifetimeObjects>
        <shell:PhoneApplicationService 
            Launching="Application_Launching" Closing="Application_Closing" 
            Activated="Application_Activated" Deactivated="Application_Deactivated"/>
    </Application.ApplicationLifetimeObjects>

</Application>